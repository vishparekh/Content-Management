<div>Programming Operators:</div><div><br></div><div>Operators are the symbol which operates on value or a variable. For example: + is a operator to perform addition.</div><div>C programming language has wide range of operators to perform various operations.&nbsp;</div><div>For better understanding of operators, these operators can be classified as:</div><div>Operators in C programming</div><div><br></div><div>Arithmetic Operators</div><div>Increment and Decrement Operators</div><div>Assignment Operators</div><div>Relational Operators</div><div>Logical Operators</div><div>Conditional Operators</div><div>Bitwise Operators</div><div>Special Operators</div><div><br></div><div>Arithmetic Operators</div><div>--------------------</div><div><br></div><div>Operator <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Meaning of Operator</div><div>&nbsp; &nbsp;+ <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span> &nbsp; &nbsp;addition or unary plus</div><div>&nbsp; &nbsp;- <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span> &nbsp; &nbsp;subtraction or &nbsp;unary minus</div><div>&nbsp; &nbsp;* <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span> &nbsp; &nbsp;multiplication</div><div>&nbsp; &nbsp;/ <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span> &nbsp; &nbsp;division</div><div>&nbsp; &nbsp;% &nbsp; &nbsp; <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>remainder after division( modulo division)</div><div>&nbsp; &nbsp;</div><div>Increment and decrement operators</div><div>---------------------------------</div><div><br></div><div>In C, ++ and -- are called increment and decrement operators respectively. Both of these operators are unary operators,</div><div>i.e, used on single operand. ++ adds 1 to operand and -- subtracts 1 to operand respectively. For example:</div><div><br></div><div>Let a=5 and b=10</div><div>a++; &nbsp;//a becomes 6</div><div>a--; &nbsp;//a becomes 5</div><div>++a; &nbsp;//a becomes 6</div><div>--a; &nbsp;//a becomes 5&nbsp;</div><div><br></div><div>Difference between ++ and -- operator as postfix and prefix</div><div>-----------------------------------------------------------</div><div><br></div><div>When i++ is used as prefix(like: ++var), ++var will increment the value of var and then return it but, if ++ is used as postfix(like: var++), operator will return the value of operand first and then only increment it.</div><div><br></div><div>Assignment Operators</div><div>--------------------</div><div><br></div><div>The most common assignment operator is =. This operator assigns the value in right side to the left side. For example:</div><div><br></div><div>var=5 &nbsp;//5 is assigned to var</div><div>a=c; &nbsp; //value of c is assigned to a</div><div>5=c; &nbsp; // Error! 5 is a constant.</div><div><br></div><div>Operator <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Example <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Same as</div><div>= <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>a=b <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>a=b</div><div>+= <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>a+=b <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>a=a+b</div><div>-= <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>a-=b <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>a=a-b</div><div>*= <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>a*=b <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>a=a*b</div><div>/= <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>a/=b <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>a=a/b</div><div>%= <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>a%=b <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>a=a%b</div><div><br></div><div>Relational Operator</div><div>-------------------</div><div><br></div><div>Relational operators checks relationship between two operands. If the relation is true, it returns value 1 and if the relation is false, it returns value 0. For example:</div><div><br></div><div>a&gt;b</div><div><br></div><div>Here, &gt; is a relational operator. If a is greater than b, a&gt;b returns 1 if not then, it returns 0.</div><div><br></div><div>Relational operators are used in decision making and loops in C programming.</div><div>Operator <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Meaning of Operator <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Example</div><div>== <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Equal to <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>5==3 returns false (0)</div><div>&gt; <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Greater than <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>5&gt;3 returns true (1)</div><div>&lt; <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Less than <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>5&lt;3 returns false (0)</div><div>!= <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Not equal to <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>5!=3 returns true(1)</div><div>&gt;= <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Greater than or equal to <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>5&gt;=3 returns true (1)</div><div>&lt;= <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Less than or equal to <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>5&lt;=3 return false (0)</div><div><br></div><div>Logical Operators</div><div>-----------------</div><div><br></div><div>Logical operators are used to combine expressions containing relation operators. In C, there are 3 logical operators:</div><div>Operator <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Meaning of Operator <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Example</div><div>&amp;&amp; <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Logial AND &nbsp;<span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>If c=5 and d=2 then,((c==5) &amp;&amp; (d&gt;5)) returns false.</div><div>|| <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Logical OR <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>If c=5 and d=2 then, ((c==5) || (d&gt;5)) returns true.</div><div>! <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Logical NOT <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>If c=5 then, !(c==5) returns false.</div><div><br></div><div>Explanation</div><div><br></div><div>For expression, ((c==5) &amp;&amp; (d&gt;5)) to be true, both c==5 and d&gt;5 should be true but, (d&gt;5) is false in the given example. So, the expression is false. For expression ((c==5) || (d&gt;5)) to be true, either the expression should be true. Since, (c==5) is true. So, the expression is true. Since, expression (c==5) is true, !(c==5) is false.</div><div><br></div><div>Conditional Operator</div><div>--------------------</div><div><br></div><div>Conditional operator takes three operands and consists of two symbols ? and : . Conditional operators are used for decision making in C. For example:</div><div><br></div><div>c=(c&gt;0)?10:-10;</div><div><br></div><div>If c is greater than 0, value of c will be 10 but, if c is less than 0, value of c will be -10.</div><div><br></div><div>Bitwise Operators</div><div>-----------------</div><div><br></div><div>A bitwise operator works on each bit of data. Bitwise operators are used in bit level programming.</div><div>Operators <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Meaning of operators</div><div>&amp; <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Bitwise AND</div><div>| <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Bitwise OR</div><div>^ <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Bitwise exclusive OR</div><div>~ <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Bitwise complement</div><div>&lt;&lt; <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Shift left</div><div>&gt;&gt; <span class="Apple-tab-span" style="white-space:pre"><span style="white-space: normal;">	</span></span>Shift right</div><div><br></div><div>Other Operators</div><div>Comma Operator</div><div>--------------</div><div>Comma operators are used to link related expressions together. For example:</div><div><br></div><div>int a,c=5,d;</div><div><br></div><div>The sizeof operator</div><div>-------------------</div><div><br></div><div>It is a unary operator which is used in finding the size of data type, constant, arrays, structure etc.</div><div><br></div><div>Conditional operators (?:)</div><div>--------------------------</div><div><br></div><div>Conditional operators are used in decision making in C programming,&nbsp;</div><div>i.e, executes different statements according to test condition whether it is either true or false.</div><div>Syntax of conditional operators</div><div><br></div><div>conditional_expression?expression1:expression2</div><div><br></div><div>If the test condition is true, expression1 is returned and if false expression2 is returned.</div>