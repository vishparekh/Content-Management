<div>Pointers And Functions:</div><div><br></div><div>When argument is passed using pointer, address of the memory location is passed instead of value.</div><div>Example of Pointer And Functions</div><div>Program to swap two number using call by reference.</div><div>---------------------------------------------------</div><div><br></div><div>&nbsp;/* C Program to swap two numbers using pointers and function. */</div><div>#include &lt;stdio.h&gt;</div><div>void swap(int *a,int *b);</div><div>int main(){</div><div>&nbsp; int num1=5,num2=10;</div><div>&nbsp; swap(&amp;num1,&amp;num2); &nbsp;/* address of num1 and num2 is passed to swap function */</div><div>&nbsp; printf("Number1 = %d\n",num1);</div><div>&nbsp; printf("Number2 = %d",num2);</div><div>&nbsp; return 0;</div><div>}</div><div>void swap(int *a,int *b){ /* pointer a and b points to address of num1 and num2 respectively */</div><div>&nbsp; int temp;</div><div>&nbsp; temp=*a;</div><div>&nbsp; *a=*b;</div><div>&nbsp; *b=temp;</div><div>}</div><div><br></div><div>Output</div><div>------</div><div>Number1 = 10</div><div>Number2 = 5</div><div><br></div><div>Explanation</div><div>-----------</div><div>The address of memory location num1 and num2 are passed to function and the pointers *a and *b accept those values. So, the pointer a and b points to address of num1 and num2 respectively. When, the value of pointer are changed, the value in memory location also changed correspondingly. Hence, change made to *a and *b was reflected in num1 and num2 in main function.</div><div><br></div><div>This technique is known as call by reference in C programming.</div>