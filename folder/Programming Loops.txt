<div>Programming for Loops:</div><div><br></div><div>Loops causes program to execute the certain block of code repeatedly&nbsp;</div><div><br></div><div>until some conditions are satisfied, i.e.,loops are used in performing&nbsp;</div><div><br></div><div>repetitive work in programming.</div><div>Suppose you want to execute some code/s 100 times. You can perform&nbsp;</div><div><br></div><div>it by writing that code/s only one time and repeat the execution 100&nbsp;</div><div><br></div><div>times using loop.</div><div>for Loop Syntax</div><div>---------------</div><div>for(initial expression; test expression; update expression)</div><div>{</div><div>&nbsp; &nbsp; &nbsp; &nbsp;code/s to be executed;&nbsp;</div><div>}</div><div><br></div><div>How for loop works in C programming?</div><div>------------------------------------</div><div><br></div><div>The initial expression is initialized only once at the beginning of the for&nbsp;</div><div><br></div><div>loop. Then, the test expression is checked by the program.&nbsp;</div><div>If the test expression is false, for loop is terminated.&nbsp;</div><div>But, if test expression is true then, the codes are executed and update&nbsp;</div><div><br></div><div>expression is updated.</div><div>Again, the test expression is checked. If it is false, loop is terminated and&nbsp;</div><div><br></div><div>if it is true, the same process repeats until test expression is false.</div><div><br></div><div>for loop example</div><div>----------------</div><div><br></div><div>Write a program to find the sum of first n natural numbers where n is&nbsp;</div><div><br></div><div>entered by user. Note: 1,2,3... are called natural numbers.</div><div><br></div><div>&nbsp;</div><div>#include &lt;stdio.h&gt;</div><div>int main(){</div><div>&nbsp; &nbsp; int n, count, sum=0;</div><div>&nbsp; &nbsp; printf("Enter the value of n.\n");</div><div>&nbsp; &nbsp; scanf("%d",&amp;n);</div><div>&nbsp; &nbsp; for(count=1;count&lt;=n;++count) &nbsp;//for loop terminates if count&gt;n</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; sum+=count; &nbsp; &nbsp;/* this statement is equivalent to sum=sum+count&nbsp;</div><div><br></div><div>*/</div><div>&nbsp; &nbsp; }</div><div>&nbsp; &nbsp; printf("Sum=%d",sum);</div><div>&nbsp; &nbsp; return 0;</div><div>}</div><div><br></div><div>Output</div><div>------</div><div>Enter the value of n.</div><div>19</div><div>Sum=190</div><div><br></div><div>In this program, the user is asked to enter the value of n. Suppose you&nbsp;</div><div><br></div><div>entered 19 then, &nbsp;count is initialized to 1 at first. Then, the test&nbsp;</div><div><br></div><div>expression in the for loop,i.e., &nbsp;(count&lt;= n) becomes true. So, the code&nbsp;</div><div><br></div><div>in the body of for loop is executed which makes sum to 1. Then, the&nbsp;</div><div><br></div><div>expression ++count is executed and again the test expression is checked,&nbsp;</div><div><br></div><div>which becomes true. Again, the body of for loop is executed which&nbsp;</div><div><br></div><div>makes sum to 3 and this process continues. When count is 20, the test&nbsp;</div><div><br></div><div>condition becomes false and the for loop is terminated.</div>