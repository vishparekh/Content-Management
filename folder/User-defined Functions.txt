<div>User-defined Functions:</div><div><br></div><div>Function prototype(declaration):</div><div>--------------------------------</div><div>Every function in C programming should be declared before they are&nbsp;</div><div><br></div><div>used. These type of declaration are also called function prototype.&nbsp;</div><div><br></div><div>Function prototype gives compiler information about function name,&nbsp;</div><div><br></div><div>type of arguments to be passed and return type.</div><div>Syntax of function prototype</div><div><br></div><div>return_type function_name(type(1) argument(1),....,type(n) argument</div><div><br></div><div>(n));</div><div><br></div><div>In the above example,int add(int a, int b); is a function prototype which&nbsp;</div><div><br></div><div>provides following information to the compiler:</div><div><br></div><div>&nbsp; &nbsp; name of the function is add()</div><div>&nbsp; &nbsp; return type of the function is int.</div><div>&nbsp; &nbsp; two arguments of type int are passed to function.</div><div><br></div><div>Function prototype are not needed if user-definition function is written&nbsp;</div><div><br></div><div>before main() function.</div><div><br></div><div>Function call</div><div>-------------</div><div><br></div><div>Control of the program cannot be transferred to user-defined function&nbsp;</div><div><br></div><div>unless it is called invoked.</div><div>Syntax of function call</div><div><br></div><div>function_name(argument(1),....argument(n));</div><div><br></div><div>In the above example, function call is made using statement add</div><div><br></div><div>(num1,num2); from main(). This make the control of program jump&nbsp;</div><div><br></div><div>from that statement to function definition and executes the codes inside&nbsp;</div><div><br></div><div>that function.</div><div><br></div><div>Function definition</div><div>-------------------</div><div><br></div><div>Function definition contains programming codes to perform specific&nbsp;</div><div><br></div><div>task.</div><div>Syntax of function definition</div><div><br></div><div>return_type function_name(type(1) argument(1),..,type(n) argument(n))</div><div>{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //body of function</div><div>}</div><div><br></div><div>Passing arguments to functions</div><div>------------------------------</div><div><br></div><div>In programming, argument/parameter is a piece of data(constant or &nbsp;</div><div><br></div><div>variable) passed from a program to the function.</div><div>Arguments that are passed in function call and arguments that are&nbsp;</div><div><br></div><div>accepted in function definition should have same data type.</div><div><br></div><div>Return Statement</div><div>----------------</div><div><br></div><div>Return statement is used for returning a value from function definition&nbsp;</div><div><br></div><div>to calling function.</div><div>Syntax of return statement</div><div><br></div><div>return (expression);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; OR</div><div>&nbsp; &nbsp; &nbsp;return; &nbsp; &nbsp;&nbsp;</div><div><br></div><div>For example:</div><div><br></div><div>return;</div><div>return a;</div><div>return (a+b);</div>