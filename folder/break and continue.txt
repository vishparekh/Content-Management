<div>break and continue:</div><div><br></div><div>There are two statement built in C, break; and continue; to interrupt the normal flow of control of a program.&nbsp;</div><div>Loops performs a set of operation repeately until certain condition becomes false but,&nbsp;</div><div>it is sometimes desirable to skip some statements inside loop and terminate the loop immediately without checking the test expression.&nbsp;</div><div>In such cases, break and continue statements are used.</div><div>break Statement</div><div>---------------</div><div><br></div><div>In C programming, break is used in terminating the loop immediately after it is encountered.&nbsp;</div><div>The break statement is used with conditional if statement.</div><div>The break statement can be used in terminating all three loops for, while and do...while loops.</div><div><br></div><div>Syntax of break statement</div><div>-------------------------</div><div>break;</div><div><br></div><div>Example of break statement</div><div>--------------------------</div><div><br></div><div>Write a C program to find average of maximum of n positive numbers entered by user. But, if the input is negative, display the average(excluding the average of negative input) and end the program.</div><div><br></div><div><br></div><div>/* C program to demonstrate the working of break statement by terminating a loop, if user inputs negative number*/</div><div># include &lt;stdio.h&gt;</div><div>int main(){</div><div>&nbsp; &nbsp;float num,average,sum;</div><div>&nbsp; &nbsp;int i,n;</div><div>&nbsp; &nbsp;printf("Maximum no. of inputs\n");</div><div>&nbsp; &nbsp;scanf("%d",&amp;n);</div><div>&nbsp; &nbsp;for(i=1;i&lt;=n;++i){</div><div>&nbsp; &nbsp; &nbsp; &nbsp;printf("Enter n%d: ",i);</div><div>&nbsp; &nbsp; &nbsp; &nbsp;scanf("%f",&amp;num);</div><div>&nbsp; &nbsp; &nbsp; &nbsp;if(num&lt;0.0)</div><div>&nbsp; &nbsp; &nbsp; &nbsp;break; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //for loop breaks if num&lt;0.0</div><div>&nbsp; &nbsp; &nbsp; &nbsp;sum=sum+num;</div><div>}</div><div>&nbsp; average=sum/(i-1); &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; printf("Average=%.2f",average);</div><div>&nbsp; return 0;</div><div>}</div><div><br></div><div>Output</div><div><br></div><div>Maximum no. of inputs</div><div>4</div><div>Enter n1: 1.5</div><div>Enter n2: 12.5</div><div>Enter n3: 7.2</div><div>Enter n4: -1</div><div>Average=7.07</div><div><br></div><div>In this program, when the user inputs number less than zero, the loop is terminated using break statement with executing the statement below it i.e., without executing sum=sum+num.</div><div><br></div><div>In C, break statements are also used in switch...case statement.</div><div><br></div><div>continue statement</div><div>------------------</div><div><br></div><div>It is sometimes desirable to skip some statements inside the loop. In such cases, continue statements are used.</div><div>Just like break, continue is also used with conditional if statement.</div><div>Syntax of continue Statement</div><div><br></div><div>continue;</div><div><br></div><div>Example of continue statement</div><div>-----------------------------</div><div><br></div><div>Write a C program to find the product of 4 integers entered by a user. If user enters 0 skip it.</div><div><br></div><div><br></div><div>//program to demonstrate the working of continue statement in C programming&nbsp;</div><div># include &lt;stdio.h&gt;</div><div>int main(){</div><div>&nbsp; &nbsp; int i,num,product;</div><div>&nbsp; &nbsp; for(i=1,product=1;i&lt;=4;++i){</div><div>&nbsp; &nbsp; &nbsp; &nbsp; printf("Enter num%d:",i);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; scanf("%d",&amp;num);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; if(num==0)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue; &nbsp;/ *In this program, when num equals to zero, it skips the statement product*=num and continue the loop. */</div><div>&nbsp; &nbsp; &nbsp; &nbsp; product*=num;</div><div>}</div><div>&nbsp; &nbsp; printf("product=%d",product);</div><div>return 0;</div><div>}</div><div><br></div><div>Output</div><div>------</div><div>Enter num1:3</div><div>Enter num2:0</div><div>Enter num3:-5</div><div>Enter num4:2</div><div>product=-30</div>